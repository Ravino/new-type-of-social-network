AWSTemplateFormatVersion: '2010-09-09'
Description: Socket.io chat service
Parameters:
  EnvironmentName:
    Type: String
    Default: dev
    Description: A name for the environment that this cloudformation will be part of.
                 Used to locate other resources in the same environment.
  ServiceName:
    Type: String
    Default: back-queue-worker
    Description: A name for the service
  ImageUrl:
    Type: String
    Default: '884088487044.dkr.ecr.eu-central-1.amazonaws.com/php-back-queue-worker:latest'
    Description: The url of a docker image that contains the application process that
                 will handle the traffic for this service
  ContainerCpu:
    Type: Number
    Default: 1024
    Description: How much CPU to give the container. 1024 is 1 CPU
  ContainerMemory:
    Type: Number
    Default: 2048
    Description: How much memory in megabytes to give the container
  Path:
    Type: String
    Default: "*"
    Description: A path on the public load balancer that this service
                 should be connected to. Use * to send all load balancer
                 traffic to this service.
  Priority:
    Type: Number
    Default: 1
    Description: The priority for the routing rule added to the load balancer.
                 This only applies if your have multiple services which have been
                 assigned to different paths on the load balancer.
  DesiredCount:
    Type: Number
    Default: 1
    Description: How many copies of the service task to run
  ApiUrl:
    Type: String
    Default: "https://dev.plizi.fun/"
    Description: Path to external api dns.
  AppDebug:
    Type: Number
    Default: 1
    Description: Is application in debug mode?
  AppEnv:
    Type: String
    Default: "Development"
    Description: Type of environment that service running on.
  AppKey:
    Type: String
    Default: "base64:B+SfHGdTdca+dxR4pzJ2SRrqFpF1gFS/pgZTHNxDbhw"
    Description: Application authorization secrets.
  AppName:
    Type: String
    Default: "PLIZI: Социальная сеть"
    Description: Application displayable name.
  AwsAccessKeyId:
    Type: String
    Default: "AKIAIBMISJ3W5T6P3ULA"
    Description: AWS access key id.
  AwsSecretAccessKey:
    Type: String
    Default: "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"
    Description: AWS access secret.
  AwsDefaultRegion:
    Type: String
    Default: "eu-central-1"
    Description: AWS region service hosted on.
  AwsBucket:
    Type: String
    Default: "plizibuck"
    Description: S2 bucket for assets storing.
  DbConnection:
    Type: String
    Default: "mysql"
    Description: Database connection type.
  DbDatabase:
    Type: String
    Default: "dev-plizi"
    Description: Database name.
  DbHost:
    Type: String
    Default: "new-back-mysql.dev"
    Description: Database host address.
  DbPassword:
    Type: String
    Default: "ecugVWHKatKQd657"
    Description: Database connection password.
  DbPort:
    Type: Number
    Default: 3306
    Description: Database connection port.
  DbUsername:
    Type: String
    Default: "root"
    Description: Database connection username.
  JwtBlacklistEnabled:
    Type: Number
    Default: 1
    Description: JWT blacklist.
  JwtTtl:
    Type: Number
    Default: 4320
    Description: JWT TTL.
  LadaCacheActive:
    Type: Number
    Default: 0
    Description: Caching dublicated queries.
  MailEncryption:
    Type: String
    Default: "tls"
    Description: Mail encryption.
  MailFromAddress:
    Type: String
    Default: "no-reply@plizi.info"
    Description: Send emails from address.
  MailFromName:
    Type: String
    Default: "PLIZI Социальная сеть"
    Description: Send emails from name.
  MailHost:
    Type: String
    Default: "mail.plizi.info"
    Description: Mailer host.
  MailMailer:
    Type: String
    Default: "smtp"
    Description: Mailer type.
  MailPassword:
    Type: String
    Default: "fereamea78"
    Description: Mail password.
  MailPort:
    Type: Number
    Default: 587
    Description: Mailer port.
  MailUsername:
    Type: String
    Default: "no-reply@plizi.info"
    Description: Mail username.
  MongoDbDatabase:
    Type: String
    Default: "admin"
    Description: MongoDB database name.
  MongoDbHost:
    Type: String
    Default: "new-back-mongo.dev"
    Description: MongoDB database host.
  MongoDbPassword:
    Type: String
    Default: "Tksx2PPDba8Ny0lZ"
    Description: MongoDB database password.
  MongoDbUsername:
    Type: String
    Default: "plizi"
    Description: MongoDB database username.
  Neo4DbBoltPort:
    Type: Number
    Default: 7687
    Description: Neo4j Graph database bolt port.
  Neo4DbHost:
    Type: String
    Default: "10.10.19.212"
    Description: Neo4j Graph database host.
  Neo4DbHttpPort:
    Type: Number
    Default: 7474
    Description: Neo4j Graph database http port.
  Neo4DbPassword:
    Type: String
    Default: "zKisCPceY6WzTP1R"
    Description: Neo4j Graph database password.
  Neo4DbUsername:
    Type: String
    Default: "neo4j"
    Description: Neo4j Graph database username.
  QueueConnection:
    Type: String
    Default: "redis"
    Description: Queue connection type [sync, redis, rebbitmq].
  RedisHost:
    Type: String
    Default: "new-redis.dev"
    Description: Redis host.
  RedisPort:
    Type: Number
    Default: 6379
    Description: Redis port.
  SentryLaravelDsn:
    Type: String
    Default: "http://89feb2eb67c741c29d06f1204b809e87@ec2-3-125-155-176.eu-central-1.compute.amazonaws.com/2"
    Description: Sentry exception logger host.
  SwooleHttpHost:
    Type: String
    Default: "0.0.0.0"
    Description: Swoole http host.
  ZmqSubHost:
    Type: String
    Default: "new-back-ws.dev"
    Description: ZeroMQ sub host

Resources:
  # A log group for storing the container logs for this service
  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Join ['-', [!Ref 'EnvironmentName', 'service', !Ref 'ServiceName']]

  # The task definition. This is a simple metadata description of what
  # container to run, and what resource requirements it has.
  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Ref 'ServiceName'
      Cpu: !Ref 'ContainerCpu'
      Memory: !Ref 'ContainerMemory'
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      ExecutionRoleArn:
        Fn::ImportValue:
          !Sub '${EnvironmentName}:ECSTaskExecutionRole'
      TaskRoleArn:
        Fn::ImportValue:
          !Sub '${EnvironmentName}:QueueWorkerRole'
      ContainerDefinitions:
        - Name: !Ref 'ServiceName'
          Cpu: !Ref 'ContainerCpu'
          Memory: !Ref 'ContainerMemory'
          Image: !Ref 'ImageUrl'
          Environment:
            - Name: API_URL
              Value: !Ref 'ApiUrl'
            - Name: APP_DEBUG
              Value: !Ref 'AppDebug'
            - Name: APP_ENV
              Value: !Ref 'AppEnv'
            - Name: APP_KEY
              Value: !Ref 'AppKey'
            - Name: APP_NAME
              Value: !Ref 'AppName'
            - Name: AWS_ACCESS_KEY_ID
              Value: !Ref 'AwsAccessKeyId'
            - Name: AWS_SECRET_ACCESS_KEY
              Value: !Ref 'AwsSecretAccessKey'
            - Name: AWS_DEFAULT_REGION
              Value: !Ref 'AwsDefaultRegion'
            - Name: AWS_BUCKET
              Value: !Ref 'AwsBucket'
            - Name: DB_CONNECTION
              Value: !Ref 'DbConnection'
            - Name: DB_DATABASE
              Value: !Ref 'DbDatabase'
            - Name: DB_HOST
              Value: !Ref 'DbHost'
            - Name: DB_PASSWORD
              Value: !Ref 'DbPassword'
            - Name: DB_PORT
              Value: !Ref 'DbPort'
            - Name: DB_USERNAME
              Value: !Ref 'DbUsername'
            - Name: JWT_BLACKLIST_ENABLED
              Value: !Ref 'JwtBlacklistEnabled'
            - Name: JWT_TTL
              Value: !Ref 'JwtTtl'
            - Name: LADA_CACHE_ACTIVE
              Value: !Ref 'LadaCacheActive'
            - Name: MAIL_ENCRYPTION
              Value: !Ref 'MailEncryption'
            - Name: MAIL_FROM_ADDRESS
              Value: !Ref 'MailFromAddress'
            - Name: MAIL_FROM_NAME
              Value: !Ref 'MailFromName'
            - Name: MAIL_HOST
              Value: !Ref 'MailHost'
            - Name: MAIL_MAILER
              Value: !Ref 'MailMailer'
            - Name: MAIL_PASSWORD
              Value: !Ref 'MailPassword'
            - Name: MAIL_PORT
              Value: !Ref 'MailPort'
            - Name: MAIL_USERNAME
              Value: !Ref 'MailUsername'
            - Name: MONGO_DB_DATABASE
              Value: !Ref 'MongoDbDatabase'
            - Name: MONGO_DB_HOST
              Value: !Ref 'MongoDbHost'
            - Name: MONGO_DB_PASSWORD
              Value: !Ref 'MongoDbPassword'
            - Name: MONGO_DB_USERNAME
              Value: !Ref 'MongoDbUsername'
            - Name: NEO4_DB_BOLT_PORT
              Value: !Ref 'Neo4DbBoltPort'
            - Name: NEO4_DB_HOST
              Value: !Ref 'Neo4DbHost'
            - Name: NEO4_DB_HTTP_PORT
              Value: !Ref 'Neo4DbHttpPort'
            - Name: NEO4_DB_PASSWORD
              Value: !Ref 'Neo4DbPassword'
            - Name: NEO4_DB_USERNAME
              Value: !Ref 'Neo4DbUsername'
            - Name: QUEUE_CONNECTION
              Value: !Ref 'QueueConnection'
            - Name: REDIS_HOST
              Value: !Ref 'RedisHost'
            - Name: REDIS_PORT
              Value: !Ref 'RedisPort'
            - Name: SENTRY_LARAVEL_DSN
              Value: !Ref 'SentryLaravelDsn'
            - Name: SWOOLE_HTTP_HOST
              Value: !Ref 'SwooleHttpHost'
            - Name: ZMQ_SUB_HOST
              Value: !Ref 'ZmqSubHost'
            - Name: ENV_NAME
              Value: !Ref 'EnvironmentName'
            - Name: REGION
              Value: !Ref 'AWS::Region'
            - Name: REDIS_ENDPOINT
              Value:
                Fn::ImportValue:
                  !Join [':', [!Ref 'EnvironmentName', 'RedisEndpoint']]

          LogConfiguration:
            LogDriver: 'awslogs'
            Options:
              awslogs-group: !Join ['-', [!Ref 'EnvironmentName', 'service', !Ref 'ServiceName']]
              awslogs-region: !Ref 'AWS::Region'
              awslogs-stream-prefix: !Ref 'ServiceName'

  # The service. The service is a resource which allows you to run multiple
  # copies of a type of task, and gather up their logs and metrics, as well
  # as monitor the number of running tasks and replace any that have crashed
  Service:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: !Ref 'ServiceName'
      Cluster:
        Fn::ImportValue:
          !Join [':', [!Ref 'EnvironmentName', 'ClusterName']]
      LaunchType: FARGATE
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 75
      DesiredCount: !Ref 'DesiredCount'
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups:
            - Fn::ImportValue:
                !Join [':', [!Ref 'EnvironmentName', 'FargateContainerSecurityGroup']]
          Subnets:
            - Fn::ImportValue:
                !Join [':', [!Ref 'EnvironmentName', 'PublicSubnetOne']]
            - Fn::ImportValue:
                !Join [':', [!Ref 'EnvironmentName', 'PublicSubnetTwo']]
      TaskDefinition: !Ref 'TaskDefinition'

  # Enable autoscaling for this service
  ScalableTarget:
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    DependsOn: Service
    Properties:
      ServiceNamespace: 'ecs'
      ScalableDimension: 'ecs:service:DesiredCount'
      ResourceId:
        Fn::Join:
          - '/'
          - - service
            - Fn::ImportValue: !Join [':', [!Ref 'EnvironmentName', 'ClusterName']]
            - !Ref 'ServiceName'
      MinCapacity: 2
      MaxCapacity: 10
      RoleARN:
        Fn::ImportValue:
          !Join [':', [!Ref 'EnvironmentName', 'AutoscalingRole']]

  # Create scaling policies for the service
  ScaleDownPolicy:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    DependsOn: ScalableTarget
    Properties:
      PolicyName:
        Fn::Join:
          - '/'
          - - scale
            - !Ref 'EnvironmentName'
            - !Ref 'ServiceName'
            - down
      PolicyType: StepScaling
      ResourceId:
        Fn::Join:
          - '/'
          - - service
            - Fn::ImportValue: !Join [':', [!Ref 'EnvironmentName', 'ClusterName']]
            - !Ref 'ServiceName'
      ScalableDimension: 'ecs:service:DesiredCount'
      ServiceNamespace: 'ecs'
      StepScalingPolicyConfiguration:
        AdjustmentType: 'ChangeInCapacity'
        StepAdjustments:
          - MetricIntervalUpperBound: 0
            ScalingAdjustment: -1
        MetricAggregationType: 'Average'
        Cooldown: 60

  ScaleUpPolicy:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    DependsOn: ScalableTarget
    Properties:
      PolicyName:
        Fn::Join:
          - '/'
          - - scale
            - !Ref 'EnvironmentName'
            - !Ref 'ServiceName'
            - up
      PolicyType: StepScaling
      ResourceId:
        Fn::Join:
          - '/'
          - - service
            - Fn::ImportValue: !Join [':', [!Ref 'EnvironmentName', 'ClusterName']]
            - !Ref 'ServiceName'
      ScalableDimension: 'ecs:service:DesiredCount'
      ServiceNamespace: 'ecs'
      StepScalingPolicyConfiguration:
        AdjustmentType: 'ChangeInCapacity'
        StepAdjustments:
          - MetricIntervalLowerBound: 0
            MetricIntervalUpperBound: 15
            ScalingAdjustment: 1
          - MetricIntervalLowerBound: 15
            MetricIntervalUpperBound: 25
            ScalingAdjustment: 2
          - MetricIntervalLowerBound: 25
            ScalingAdjustment: 3
        MetricAggregationType: 'Average'
        Cooldown: 60

  # Create alarms to trigger these policies
  LowCpuUsageAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName:
        Fn::Join:
          - '-'
          - - low-cpu
            - !Ref 'EnvironmentName'
            - !Ref 'ServiceName'
      AlarmDescription:
        Fn::Join:
          - ' '
          - - "Low CPU utilization for service"
            - !Ref 'ServiceName'
            - "in stack"
            - !Ref 'EnvironmentName'
      MetricName: CPUUtilization
      Namespace: AWS/ECS
      Dimensions:
        - Name: ServiceName
          Value: !Ref 'ServiceName'
        - Name: ClusterName
          Value:
            Fn::ImportValue: !Join [':', [!Ref 'EnvironmentName', 'ClusterName']]
      Statistic: Average
      Period: 60
      EvaluationPeriods: 1
      Threshold: 20
      ComparisonOperator: LessThanOrEqualToThreshold
      AlarmActions:
        - !Ref ScaleDownPolicy

  HighCpuUsageAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName:
        Fn::Join:
          - '-'
          - - high-cpu
            - !Ref 'EnvironmentName'
            - !Ref 'ServiceName'
      AlarmDescription:
        Fn::Join:
          - ' '
          - - "High CPU utilization for service"
            - !Ref 'ServiceName'
            - "in stack"
            - !Ref 'EnvironmentName'
      MetricName: CPUUtilization
      Namespace: AWS/ECS
      Dimensions:
        - Name: ServiceName
          Value: !Ref 'ServiceName'
        - Name: ClusterName
          Value:
            Fn::ImportValue: !Join [':', [!Ref 'EnvironmentName', 'ClusterName']]
      Statistic: Average
      Period: 60
      EvaluationPeriods: 1
      Threshold: 70
      ComparisonOperator: GreaterThanOrEqualToThreshold
      AlarmActions:
        - !Ref ScaleUpPolicy
