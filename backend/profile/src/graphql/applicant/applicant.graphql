""" Дата со временем в формате ISO-8601 с часовым поясом. """
scalar ZonedDateTime

""" Базовый тип со всеми запросами """
type Query {
    request: RequestQuery!
}

""" Базовый тип со всеми мутирующими запросами """
type Mutation {
    questionnaire: QuestionnaireMutation!
    request: RequestMutation!
}

type RequestQuery {
    """ Получение одного заявления по его идентификатору"""
    get(id: ID!): Request

    """ Получение списка заявлений (не черновиков). Параметр name используется для поиска заявлений по имени. """
    requests(name: String, size: Int): RequestList!
    """ Получение списка заявлений-черновиков. Параметр name используется для поиска заявлений по имени. """
    drafts(name: String, size: Int): RequestList!

    """ Возвращает список заявлений в соответствии с курсором полученным при вызове методов requests или drafts.
        Если первую страницу получали через requests то этот метод возвращает не черновики, а если drafts то черновики.
        Условия поиска сохраняются.
    """
    select(cursor: String!, offset: Int!): RequestList!
}

type QuestionnaireMutation {
    """ Запускает новый опросник. Возвращает идентификатор заявления-опросника.
        Этот идентификатор используется для определения какой опросник проходит заявитель
        и является идентификатором черновика.
        Для получения первого вопроса необходимо отправить запрос next передав идентификатор
        опросника и без указания ответа.
    """
    start: ID!

    """ Выдаёт первый/следующий вопрос. При старте нового опросника передаётся только идентификатор опросника questionairId.
        Если пользователь дал ответ то этот отвер передаётся. В результате метод возвращает следующий вопрос для ответа.
        Если тип вопроса на который отвечает пользователь это выбор из списка, то достаточно передавать answerId.
        Если тип вопроса - поле для ввода, то достаточно передать только answer. Конечно questionairId обязателен в обоиз случаях.
        Если опросник полностью пройден, метод вернёт null.
        При каждом вызове этого метода, переданные ответа на вопросы сохраняются на сервере.
        С помощью этого метода можно дать ответ на ранее введённый вопрос передав ответ и идентификатор вопроса questionId.
        В этом случае метод возвращает вопрос на следующий вопрос после на ктороый был дан ответ. Все ранее введённые ответы
        на последующие вопросы обнуляются.
        questionId обязательное поле, кроме получения первого вопроса.
    """
    next(id: ID!, questionId: ID, answerId: ID, answer: String): Question

    """ Сохранение черновика опросника. Этот метод доступен только если пользователь залогинен.
        По умолчанию у пользователя опросник получает имя в качестве даты и времени начала прохождения опросника.
    """
    save(id: ID!, name: String!): Boolean!

    """ Выполняет расчёт заявления на базе введённых ответов на вопросы. Передаётся идентификатор опросника. """
    build(id: ID!): Request!
}

type RequestMutation {
    """ Удаление черновика. Если не черновик то возвращается ошибка. """
    delete(id: ID!): Boolean!
    """ Отправить заявление на рассмотрение разрешение по процедуре на рассмотрение """
    send(request: ProcedureRequestInput!): ProcedureRequest!
}

""" Один вопрос из опросника """
type Question {
    id: ID!
    question: String!
    kind: QuestionKind!
    answers: [Answer!]
}

enum QuestionKind {
    """ Выбор одного значения из списка """
    SINGLE_OPTION,
    """ Простое текстовое однострочное поле """
    INPUT
}

type Answer {
    id: ID!
    answer: String!
}

type Request {
    id: ID!
    name: String!
    answers: [RequestAnswer!]!
    draft: Boolean!
    createdAt: ZonedDateTime!

    """ Процедуры для этапа 'Предпроектная подготовка' """
    projectPreparation: Stage
    """ Процедуры для этапа 'Проектирование' """
    designing: Stage
    """ Процедуры для этапа 'Подготовка к строительству' """
    buildingPreparation: Stage
    """ Процедуры для этапа 'Строительно-монтажные работы' """
    constructionAndAssembly: Stage
    """ Процедуры для этапа 'Завершение строительно-монтажных работ,' """
    constructionAndAssemblyFinish: Stage
    """ Процедуры для этапа 'Подключение к ресурсам' """
    resourceConnection: Stage
    """ Процедуры для этапа 'Ввод в эксплуатацию' """
    commissioning: Stage
    """ Процедуры для этапа 'Строительство завершено' """
    finish: Stage
}

type RequestAnswer {
    question: Question!
    """ Выбранный вариант ответа на вопрос с выбор варианта """
    answer: Answer
    """ Введённый текст ответа на тектовой вопрос"""
    value: String
}

type Stage {
    duration: Int
    procedures: [Procedure!]
}

type Procedure {
    """ Внутренний идентификатор процедуры """
    id: ID!
    """ Код процедуры """
    code: String!
    """ Наименование процедуры """
    title: String!
    """ Короткое описание процедуры """
    result: String!
    """ Орган Исполнительной Власти. Здесь перечисляются наименования ОИВов только. """
    executiveAuthority: String!
    """ Срок рассмотрения в календарных днях """
    duration: Int!
    """ Описание файлов для загрузки """
    files: [ProcedureFile!]
    """ Список Нормативно-Правовых Документ """
    documents: [ProcedureDocument!]
    """ Идентификаторы процедур из этого этапа от которых зависит """
    dependsOn: [ID!]
    """ Состояние заявления на получение разрешения по процедуре """
    state: ProcedureRequestState!
    """ Структура с описанием заявления на получение разрешения по процедуре. Если было подано """
    request: ProcedureRequest
    """ Структура с ответов из ОИВ. Если ответ был получен. Либо если было возвращено менеджеров, указывается ответ менеджера. """
    response: ProcedureResponse
}

""" Нормативно Правовой Документ """
type ProcedureDocument {
    """ Текстовое описание """
    title: String!
    """ Ссылка на ПНД """
    link: String!
}

""" Описание файла необходимого для загрузки """
type ProcedureFile {
    """ Описание файла """
    title: String!
}

type ProcedureRequest {
    """ Номер заявления """
    id: String!
    """ Оставшиеся время до окончания рассмотрения заявления на получение разрешения по процедуре (ЗПРП) """
    timeLeft: Int!
    """ Дата и вермя подачи заявления на получения разрешениея по процедуре """
    requestedAt: ZonedDateTime!
    """ Поданные файлы по ЗПРП """
    files: [ProcedureRequestFile!]
    """ Примечания к ЗПРП """
    notes: String!
}

""" Ответ от менеджера или ОИВ по ЗПРП """
type ProcedureResponse {
    """ Дата и время получения ответа """
    respondedAt: ZonedDateTime!
    """ Текст ответа """
    response: String!
    """ Приложенные файлы с ответом """
    files: [String!]
}

""" Состояние ЗПРП """
enum ProcedureRequestState {
    """ Не отправлено на рассмотрение """
    NOT_REQUESTED,
    """ На модерации (у менеджера) """
    ON_MODERATION
    """ На рассмотрении (в ОИВ) """
    IN_PROGRESS
    """ Возвращено на доработку """
    RETURNED
    """ Отклонено """
    REJECTED
    """ Дано разрешение """
    APPROVED
    """ Возвращено модератором """
    MODERATION_RETURNED
}

""" Файл приложенный к ЗПРП """
type ProcedureRequestFile {
    """ Внудренний идентификатор файла """
    id: ID!
    """ Описание файла """
    title: String!
    """ Идентификатор загруженного файла в хранилище """
    file: String!
}

input ProcedureRequestInput {
    """ Номер заявления """
    procedureId: ID!
    """ Поданные файлы по ЗПРП """
    files: [ProcedureRequestFileInput!]
    """ Примечания к ЗПРП """
    notes: String!
}

""" Файл приложенный к ЗПРП """
input ProcedureRequestFileInput {
    """ Внудренний идентификатор файла """
    id: ID!
    """ Идентификатор загруженного файла в хранилище """
    file: String!
}


""" Структура списка заявлений """
type RequestList {
    """ Курсов используемый для постраничной итерации по списку """
    cursor: String!
    """ Общее количество заявлений """
    count: Int!
    """ Список заявлений """
    items: [Request!]!
}
