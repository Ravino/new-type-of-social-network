AWSTemplateFormatVersion: '2010-09-09'
Description: Service sample builder
Parameters:
  EnvironmentName:
    Type: String
    Default: test
    Description: A name for the environment that this cloudformation will be part of.
                 Used to locate other resources in the same environment.
  ServiceName:
    Type: String
    Default: back-api
    Description: A name for the service
  ImageUrl:
    Type: String
    Default: '884088487044.dkr.ecr.eu-central-1.amazonaws.com/plizi_back-php-api:latest'
    Description: The url of a docker image that contains the application process that
                 will handle the traffic for this service
  ContainerPort:
    Type: Number
    Default: 1215
    Description: What port number the application inside the docker container is binding to
  ContainerCpu:
    Type: Number
    Default: 256
    Description: How much CPU to give the container. 1024 is 1 CPU
  ContainerMemory:
    Type: Number
    Default: 512
    Description: How much memory in megabytes to give the container
  DesiredCount:
    Type: Number
    Default: 1
    Description: How many copies of the service task to run

  ApiUrl:
    Type: String
    Default: "https://dev.plizi.fun/"
    Description: Path to external api dns.
  AppDebug:
    Type: Number
    Default: 1
    Description: Is application in debug mode?
  AppEnv:
    Type: String
    Default: "Development"
    Description: Type of environment that service running on.
  AppKey:
    Type: String
    Default: "base64:B+SfHGdTdca+dxR4pzJ2SRrqFpF1gFS/pgZTHNxDbhw"
    Description: Application authorization secrets.
  AppName:
    Type: String
    Default: "PLIZI: Социальная сеть"
    Description: Application displayable name.
  AwsAccessKeyId:
    Type: String
    Default: "AKIAIBMISJ3W5T6P3ULA"
    Description: AWS access key id.
  AwsSecretAccessKey:
    Type: String
    Default: "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"
    Description: AWS access secret.
  AwsDefaultRegion:
    Type: String
    Default: "eu-central-1"
    Description: AWS region service hosted on.
  AwsBucket:
    Type: String
    Default: "plizibuck"
    Description: S2 bucket for assets storing.
  DbConnection:
    Type: String
    Default: "mysql"
    Description: Database connection type.
  JwtBlacklistEnabled:
    Type: Number
    Default: 1
    Description: JWT blacklist.
  JwtTtl:
    Type: Number
    Default: 4320
    Description: JWT TTL.
  LadaCacheActive:
    Type: Number
    Default: 0
    Description: Caching dublicated queries.
  MailEncryption:
    Type: String
    Default: "tls"
    Description: Mail encryption.
  MailFromAddress:
    Type: String
    Default: "no-reply@plizi.info"
    Description: Send emails from address.
  MailFromName:
    Type: String
    Default: "PLIZI Социальная сеть"
    Description: Send emails from name.
  MailHost:
    Type: String
    Default: "mail.plizi.info"
    Description: Mailer host.
  MailMailer:
    Type: String
    Default: "smtp"
    Description: Mailer type.
  MailPassword:
    Type: String
    Default: "fereamea78"
    Description: Mail password.
  MailPort:
    Type: Number
    Default: 587
    Description: Mailer port.
  MailUsername:
    Type: String
    Default: "no-reply@plizi.info"
    Description: Mail username.
  Neo4DbBoltPort:
    Type: Number
    Default: 7687
    Description: Neo4j Graph database bolt port.
  Neo4DbHost:
    Type: String
    Default: "10.10.19.212"
    Description: Neo4j Graph database host.
  Neo4DbHttpPort:
    Type: Number
    Default: 7474
    Description: Neo4j Graph database http port.
  Neo4DbPassword:
    Type: String
    Default: "zKisCPceY6WzTP1R"
    Description: Neo4j Graph database password.
  Neo4DbUsername:
    Type: String
    Default: "neo4j"
    Description: Neo4j Graph database username.
  QueueConnection:
    Type: String
    Default: "redis"
    Description: Queue connection type [sync, redis, rebbitmq].
  SentryLaravelDsn:
    Type: String
    Default: "http://89feb2eb67c741c29d06f1204b809e87@ec2-3-125-155-176.eu-central-1.compute.amazonaws.com/2"
    Description: Sentry exception logger host.
  SwooleHttpHost:
    Type: String
    Default: "0.0.0.0"
    Description: Swoole http host.

Resources:
  # A log group for storing the container logs for this service
  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Join ['-', [!Ref 'EnvironmentName', 'service', !Ref 'ServiceName']]

  # The task definition. This is a simple metadata description of what
  # container to run, and what resource requirements it has.
  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Ref 'ServiceName'
      Cpu: !Ref 'ContainerCpu'
      Memory: !Ref 'ContainerMemory'
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      ExecutionRoleArn:
        Fn::ImportValue:
          !Join [':', [!Ref 'EnvironmentName', 'ECSTaskExecutionRole']]
      TaskRoleArn:
        Fn::ImportValue:
          !Join [':', [!Ref 'EnvironmentName', 'BackApiRole']]
      ContainerDefinitions:
        - Name: !Ref 'ServiceName'
          Image: !Ref 'ImageUrl'
          Environment:
            - Name: API_URL
              Value: !Ref 'ApiUrl'
            - Name: APP_DEBUG
              Value: !Ref 'AppDebug'
            - Name: APP_ENV
              Value: !Ref 'AppEnv'
            - Name: APP_KEY
              Value: !Ref 'AppKey'
            - Name: APP_NAME
              Value: !Ref 'AppName'
            - Name: AWS_ACCESS_KEY_ID
              Value: !Ref 'AwsAccessKeyId'
            - Name: AWS_SECRET_ACCESS_KEY
              Value: !Ref 'AwsSecretAccessKey'
            - Name: AWS_DEFAULT_REGION
              Value: !Ref 'AwsDefaultRegion'
            - Name: AWS_BUCKET
              Value: !Ref 'AwsBucket'
            - Name: DB_CONNECTION
              Value: !Ref 'DbConnection'
            - Name: DB_DATABASE
              Value: 
                Fn::ImportValue:
                  !Join [':', [!Ref 'EnvironmentName', 'MySQLDBName']]
            - Name: DB_HOST
              Value: 
                Fn::ImportValue:
                  !Join [':', [!Ref 'EnvironmentName', 'MySQLDBHost']]
            - Name: DB_PASSWORD
              Value: 
                Fn::ImportValue:
                  !Join [':', [!Ref 'EnvironmentName', 'MySQLPass']]
            - Name: DB_PORT
              Value: 
                Fn::ImportValue:
                  !Join [':', [!Ref 'EnvironmentName', 'MySQLDBPort']]
            - Name: DB_USERNAME
              Value: 
                Fn::ImportValue:
                  !Join [':', [!Ref 'EnvironmentName', 'MySQLUser']]
            - Name: JWT_BLACKLIST_ENABLED
              Value: !Ref 'JwtBlacklistEnabled'
            - Name: JWT_TTL
              Value: !Ref 'JwtTtl'
            - Name: LADA_CACHE_ACTIVE
              Value: !Ref 'LadaCacheActive'
            - Name: MAIL_ENCRYPTION
              Value: !Ref 'MailEncryption'
            - Name: MAIL_FROM_ADDRESS
              Value: !Ref 'MailFromAddress'
            - Name: MAIL_FROM_NAME
              Value: !Ref 'MailFromName'
            - Name: MAIL_HOST
              Value: !Ref 'MailHost'
            - Name: MAIL_MAILER
              Value: !Ref 'MailMailer'
            - Name: MAIL_PASSWORD
              Value: !Ref 'MailPassword'
            - Name: MAIL_PORT
              Value: !Ref 'MailPort'
            - Name: MAIL_USERNAME
              Value: !Ref 'MailUsername'
            - Name: MONGO_DB_DATABASE
              Value: 
                Fn::ImportValue:
                  !Join [':', [!Ref 'EnvironmentName', 'MongoDBName']]
            - Name: MONGO_DB_HOST
              Value: 
                Fn::ImportValue:
                  !Join [':', [!Ref 'EnvironmentName', 'MongoDBHost']]
            - Name: MONGO_DB_PASSWORD
              Value: 
                Fn::ImportValue:
                  !Join [':', [!Ref 'EnvironmentName', 'MongoDBUser']]
            - Name: MONGO_DB_USERNAME
              Value: 
                Fn::ImportValue:
                  !Join [':', [!Ref 'EnvironmentName', 'MongoDBPass']]
            - Name: NEO4_DB_BOLT_PORT
              Value: !Ref 'Neo4DbBoltPort'
            - Name: NEO4_DB_HOST
              Value: !Ref 'Neo4DbHost'
            - Name: NEO4_DB_HTTP_PORT
              Value: !Ref 'Neo4DbHttpPort'
            - Name: NEO4_DB_PASSWORD
              Value: !Ref 'Neo4DbPassword'
            - Name: NEO4_DB_USERNAME
              Value: !Ref 'Neo4DbUsername'
            - Name: QUEUE_CONNECTION
              Value: !Ref 'QueueConnection'
            - Name: REDIS_HOST
              Value: 
                Fn::ImportValue:
                  !Join [':', [!Ref 'EnvironmentName', 'RedisHost']]
            - Name: REDIS_PORT
              Value: 
                Fn::ImportValue:
                  !Join [':', [!Ref 'EnvironmentName', 'RedisPort']]
            - Name: SENTRY_LARAVEL_DSN
              Value: !Ref 'SentryLaravelDsn'
            - Name: SWOOLE_HTTP_HOST
              Value: !Ref 'SwooleHttpHost'
            - Name: ZMQ_SUB_HOST
              Value: 
                Fn::ImportValue:
                  !Join [':', [!Ref 'EnvironmentName', 'BackWSServiceAddress']]
            - Name: ENV_NAME
              Value: !Ref 'EnvironmentName'
            - Name: REGION
              Value: !Ref 'AWS::Region'
          PortMappings:
            - ContainerPort: !Ref 'ContainerPort'
          LogConfiguration:
            LogDriver: 'awslogs'
            Options:
              awslogs-group: !Join ['-', [!Ref 'EnvironmentName', 'service', !Ref 'ServiceName']]
              awslogs-region: !Ref 'AWS::Region'
              awslogs-stream-prefix: !Ref 'ServiceName'

  # The service. The service is a resource which allows you to run multiple
  # copies of a type of task, and gather up their logs and metrics, as well
  # as monitor the number of running tasks and replace any that have crashed
  Service:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: !Ref 'ServiceName'
      Cluster:
        Fn::ImportValue:
          !Join [':', [!Ref 'EnvironmentName', 'ClusterName']]
      LaunchType: FARGATE
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 75
      DesiredCount: !Ref 'DesiredCount'
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups:
            - Fn::ImportValue:
                !Join [':', [!Ref 'EnvironmentName', 'FargateContainerSecurityGroup']]
          Subnets:
            - Fn::ImportValue:
                !Join [':', [!Ref 'EnvironmentName', 'PublicSubnetOne']]
            - Fn::ImportValue:
                !Join [':', [!Ref 'EnvironmentName', 'PublicSubnetTwo']]
      TaskDefinition: !Ref 'TaskDefinition'
      # LoadBalancers:
      #   - ContainerName: !Ref 'ServiceName'
      #     ContainerPort: !Ref 'ContainerPort'
      #     TargetGroupArn: !Ref 'TargetGroup'
