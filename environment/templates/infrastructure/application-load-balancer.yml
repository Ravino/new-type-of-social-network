AWSTemplateFormatVersion: '2010-09-09'
Description: This stack deploys Application Load balancer with all required 
             target groups and listeners related to the current priject.
Metadata:
  cfn-lint:
    config:
      ignore_checks:
      - E3012
Parameters:
  # application configuration
  EnvironmentName:
    Type: String
    Default: test
    Description: A name for the environment that this cloudformation will be part of.
                 Used to locate other resources in the same environment.
    AllowedValues:
      - test
      - prod
    ConstraintDescription: Environment name may be only 'test' or 'prod', to prevent
                           configuration files multiplication.
  CertificateArn:
    Type: String
    Description: ARN of the Amazon Certificate Manager SSL certificate to use for this app

  DomainName:
    Type: String
    Description: The specific alias name for the application
Resources:

  EcsSecurityGroupIngressFromALB:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Ingress from the public ALB
      GroupId: 
        Fn::ImportValue:
          !Join [':', [!Ref 'EnvironmentName', 'FargateContainerSecurityGroup']]
      IpProtocol: -1
      SourceSecurityGroupId: !Ref 'ApplicationLoadBalancerSG'
      
  ApplicationLoadBalancerSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Access to the public facing load balancer
      VpcId: 
        Fn::ImportValue:
          !Join [':', [!Ref 'EnvironmentName', 'VPCId']]
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          IpProtocol: -1

  # S3 Bucket log
  ALBLogBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: "PLIZI-eu-central-1-logs-TEST-ALB"
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain

  # S3 Bucket policy
  ALBLogBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref 'ALBLogBucket'
      PolicyDocument:
        Version: "2008-10-17"
        Statement:
          - Sid: ELBAccessLogs20130930
            Effect: "Allow"
            Resource: 
              Fn::Join: 
                - ""
                - - "arn:aws:"
                  - "s3:::"
                  - !Ref ALBLogBucket
                  - "/"
                  - "Logs"
                  - "/AWSLogs/"
                  - !Sub ${AWS::AccountId}
                  - "/*"
            Principal: 
              AWS: 884088487044
            Action: 
            - "s3:PutObject"

  ApplicationLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    DependsOn: ALBLogBucketPolicy
    Properties:
      Scheme: internet-facing
      LoadBalancerAttributes:
        - Key: access_logs.s3.enabled 
          Value: true
        - Key: access_logs.s3.bucket
          Value: !Ref ALBLogBucket
        - Key: access_logs.s3.prefix
          Value: "ALBLog"
        - Key: idle_timeout.timeout_seconds
          Value: '30'
        #- Key: routing.http2.enabled
        #  Value: false
        #- Key: routing.http.drop_invalid_header_fields.enabled
        #  Value: false
      Subnets:
        - Fn::ImportValue:
            !Join [':', [!Ref 'EnvironmentName', 'PublicSubnetOne']]
        - Fn::ImportValue:
            !Join [':', [!Ref 'EnvironmentName', 'PublicSubnetTwo']]
        - Fn::ImportValue:
            !Join [':', [!Ref 'EnvironmentName', 'PublicSubnetThree']]
      SecurityGroups: [!Ref 'ApplicationLoadBalancerSG']
      Tags:
        - Key: "Name"
          Value: "PLIZI-eu-central-1-TEST-ALB"
        - Key: "Project"
          Value: "Plizi"
        - Key: "Region"
          Value: !Sub ${AWS::Region}
        - Key: "Environment"
          Value: !Ref 'EnvironmentName'

  # Route 53
  ALBRecordSetGroupPublic:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      Comment: "RecordSetGroup for ALB, facing on eu-central-1, PublicHostedZone "
      HostedZoneId: 
        Fn::ImportValue:
          !Join [':', [!Ref 'EnvironmentName', 'PublicDNSHostedZone']]
      RecordSets:
        - Name: !Sub 'dev.${DomainName}'
          Type: A
          AliasTarget:
            HostedZoneId: !GetAtt 'ApplicationLoadBalancer.CanonicalHostedZoneID'
            DNSName: !GetAtt 'ApplicationLoadBalancer.DNSName'
        - Name: !Sub 'dev-ws.${DomainName}'
          Type: A
          AliasTarget:
            HostedZoneId: !GetAtt 'ApplicationLoadBalancer.CanonicalHostedZoneID'
            DNSName: !GetAtt 'ApplicationLoadBalancer.DNSName'
        - Name: !Sub 'dev-qw.${DomainName}'
          Type: A
          AliasTarget:
            HostedZoneId: !GetAtt 'ApplicationLoadBalancer.CanonicalHostedZoneID'
            DNSName: !GetAtt 'ApplicationLoadBalancer.DNSName'
        - Name: !Sub 'dev-api.${DomainName}'
          Type: A
          AliasTarget:
            HostedZoneId: !GetAtt 'ApplicationLoadBalancer.CanonicalHostedZoneID'
            DNSName: !GetAtt 'ApplicationLoadBalancer.DNSName'
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete

  DummyTargetGroupALB:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Join ['-', [!Ref 'EnvironmentName', 'alb-tg-drop']]
      Port: 80
      Protocol: HTTP
      VpcId: 
        Fn::ImportValue:
          !Join [':', [!Ref 'EnvironmentName', 'VPCId']]

  ALBListenerNginx:
    Type: AWS::ElasticLoadBalancingV2::Lisqtener
    Properties:
      DefaultActions:
        - Type: redirect
          RedirectConfig:
            Protocol: HTTPS
            Port: 443
            Host: "#{host}"
            Path: "/#{path
            
            
            "
            Query: "#{query}"
            StatusCode: "HTTP_301"
      LoadBalancerArn: !Ref 'ApplicationLoadBalancer'
      Port: 80
      Protocol: HTTP
      Certificates:
        - CertificateArn: !Ref CertificateArn

  ALBListenerNginxSSL:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroups: 
          - TargetGroupArn: !Ref 'DummyTargetGroupALB'
            Weight: 1
          #- TargetGroupArn: !Ref TargetGroup2
          #  Weight: 1
          TargetGroupStickinessConfig: 
            DurationSeconds: 60
            Enabled: true
      LoadBalancerArn: !Ref 'ApplicationLoadBalancer'
      Port: 443
      Protocol: HTTPS
      Certificates:
        - CertificateArn: !Ref 'CertificateArn'

  ALBListenerWebSocketUserSSL:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroups: 
          - TargetGroupArn: !Ref 'DummyTargetGroupALB'
            Weight: 1
          #- TargetGroupArn: !Ref TargetGroup2
          #  Weight: 1
          TargetGroupStickinessConfig: 
            DurationSeconds: 60
            Enabled: true
      LoadBalancerArn: !Ref 'ApplicationLoadBalancer'
      Port: 7070
      Protocol: HTTPS
      Certificates:
        - CertificateArn: !Ref 'CertificateArn'
        
  ALBListenerWebSocketQW:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroups: 
          - TargetGroupArn: !Ref 'DummyTargetGroupALB'
            Weight: 1
          #- TargetGroupArn: !Ref TargetGroup2
          #  Weight: 1
          TargetGroupStickinessConfig: 
            DurationSeconds: 60
            Enabled: true
      LoadBalancerArn: !Ref 'ApplicationLoadBalancer'
      Port: 5555
      Protocol: HTTP

  ALBListenerBackApiSSL:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - TargetGroupArn: !Ref 'DummyTargetGroupALB'
          Type: 'forward'
      LoadBalancerArn: !Ref 'ApplicationLoadBalancer'
      Port: 1215
      Protocol: HTTPS
      Certificates:
        - CertificateArn: !Ref 'CertificateArn'
Outputs:

  # Balancer Overall Info
  ALBId:
    Description: The ARN of the Application Load Balancer
    Value: !Ref 'ApplicationLoadBalancer'
    Export:
      Name: !Join [ ':', [ !Ref 'EnvironmentName', 'ALBId' ] ]
  ALBCanonicalHostedZoneID: 
    Description: The ARN of the Application Load Balancer
    Value: !GetAtt ApplicationLoadBalancer.CanonicalHostedZoneID
    Export:
      Name: !Join [ ':', [ !Ref 'EnvironmentName', 'ALBCanonicalHostedZoneID' ] ]
  ALBDNSName:
    Description: DNSName of Application Load Balancer
    Value: !GetAtt ApplicationLoadBalancer.DNSName
    Export: 
      Name: !Join [ ':', [ !Ref 'EnvironmentName', 'ALBDNSName' ] ]
  ALBName:
    Description: Name of Application Load Balancer
    Value: !GetAtt ApplicationLoadBalancer.LoadBalancerName
    Export: 
      Name: !Join [ ':', [ !Ref 'EnvironmentName', 'ALBName' ] ]
  ALBFullName:
    Description: Full Name of Application Load Balancer
    Value: !GetAtt ApplicationLoadBalancer.LoadBalancerFullName
    Export: 
      Name: !Join [ ':', [ !Ref 'EnvironmentName', 'ALBFullName' ] ]

  # Extra stuff
  ALBLogBucket:
    Description: The ARN of the S3 Bucket that is created for ALB logs storage
    Value: !Ref ALBLogBucket
    Export:
      Name: !Join [ ':', [ !Ref 'EnvironmentName', 'ALBLogBucket' ] ]

  # Listeners
  ALBListenerBackApiSSL:
    Description: The ARN of the public load balancer's Listener
    Value: !Ref ALBListenerBackApiSSL
    Export:
      Name: !Join [ ':', [ !Ref 'EnvironmentName', 'ALBListenerBackApiSSL' ] ]

  ALBListenerNginxSSL:
    Description: The ARN of the public load balancer's Listener
    Value: !Ref ALBListenerNginxSSL
    Export:
      Name: !Join [ ':', [ !Ref 'EnvironmentName', 'ALBListenerNginxSSL' ] ]
  
  ALBListenerWebSocketUserSSL:
    Description: The ARN of the public load balancer's Listener
    Value: !Ref ALBListenerWebSocketUserSSL
    Export:
      Name: !Join [ ':', [ !Ref 'EnvironmentName', 'ALBListenerWebSocketUserSSL' ] ]

  ALBListenerWebSocketQW:
    Description: The ARN of the ALBListenerWebSocketQW
    Value: !Ref ALBListenerWebSocketQW
    Export:
      Name: !Join [ ':', [ !Ref 'EnvironmentName', 'ALBListenerWebSocketQW' ] ]

  # Route 53
  ALBRecordSetGroupPublic:
    Description: The ARN of the public load balancer's Listener
    Value: !Ref ALBRecordSetGroupPublic
    Export:
      Name: !Join [ ':', [ !Ref 'EnvironmentName', 'ALBRecordSetGroupPublic' ] ]
