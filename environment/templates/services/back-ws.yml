AWSTemplateFormatVersion: '2010-09-09'
Description: ECS Service managed with Fargate launch type

Parameters:
  # application configuration
  EnvironmentName:
    Type: String
    Default: test
    Description: A name for the environment that this cloudformation will be part of.
                 Used to locate other resources in the same environment.
    AllowedValues:
      - test
      - prod
    ConstraintDescription: Environment name may be only 'test' or 'prod', to prevent
                           configuration files multiplication.
  # stack-related parameters
  # application configuration
  ServiceName:
    Type: String
    Default: service
    Description: A name for the service that would be managing FARGATE tasks inside the cluster.
  # deployment
  ImageUrlWebSocket:
    Type: String
    Default: 'busybox'
    Description: The url of a docker image that contains the application process that
                 will handle the traffic for this service
  ImageUrlQueueWorker:
    Type: String
    Default: 'busybox'
    Description: The url of a docker image that contains the application process that
                 will handle the traffic for this service
  # deployment
  ContainerPort:
    Type: Number
    Default: 7070
    Description: What port number the application the docker container is binding to
  # deployment
  ServiceProtocol:
    Type: String
    Default: HTTP
    Description: Which protocol should be used for service communication
    AllowedValues:
      - HTTP
      - HTTPS
      - TCP
      - TLS
      - UDP
    ConstraintDescription: Only existing internet protocol should be specified as service protocol
  # resources management
  ContainerCpu:
    Type: Number
    Default: 256
    Description: How much CPU to give the container. 1024 is 1 CPU
  # resources management
  ContainerMemory:
    Type: Number
    Default: 512
    Description: How much memory in megabytes to give the container
  # load balancing
  Path:
    Type: String
    Description: A path on the load balancer that this service
                 should be connected to. Use * to send all load balancer
                 traffic to this service.
  # load balancing
  Priority:
    Type: Number
    Default: 1
    Description: The priority for the routing rule added to the load balancer.
                 This only applies if your have multiple services which have been
                 assigned to different paths on the load balancer.
  # auto-scaling
  MinCapacity:
    Type: Number
    Default: 1
    Description: How many copies is min setupped to run
  # auto-scaling
  DesiredCount:
    Type: Number
    Default: 1
    Description: How many copies of the service task to run
  # auto-scaling
  MaxCapacity:
    Type: Number
    Default: 5
    Description: How many copies is max allowed to run
  # auto-scaling
  LowCpuPeriodAlarm:
    Type: Number
    Default: 300
    Description: Period length (in seconds) that limit value encounters as once noticed
  # auto-scaling
  ScaleDownCooldown:
    Type: Number
    Default: 300
    Description: Cooldown before next scaling down
  # auto-scaling
  LowCpuThresholdAlarm:
    Type: Number
    Default: 20
    Description: Limit value that indicates, that alarm action should be applied
  # auto-scaling
  HighCpuPeriodAlarm:
    Type: Number
    Default: 60
    Description: Period length (in seconds) that limit value encounters as once noticed
  # auto-scaling
  HighCpuThresholdAlarm:
    Type: Number
    Default: 70
    Description: Limit value that indicates, that alarm action should be applied
  # auto-scaling
  ScaleUpCooldown:
    Type: Number
    Default: 30
    Description: Cooldown before next scaling up
  # deployment
  DeploymentMaximum:
    Type: Number
    Default: 200
    Description: Maximum percent parameter represents an upper limit on the number of tasks in a service
               that are allowed in the RUNNING or PENDING state during a deployment,
               as a percentage of the desired number of tasks
  # deployment
  DeploymentMinimum:
    Type: Number
    Default: 100
    Description: Minimum healthy percent represents a lower limit on the number of tasks in a service
                that must remain in the RUNNING state during a deployment, as a percentage of
                the desired number of tasks (rounded up to the nearest integer)
  # env vars
  ApiUrl:
    Type: String
    Default: "dev.plizi.fun"
    Description: Path to external api dns.
  AppDebug:
    Type: Number
    Default: 1
    Description: Is application in debug mode?
  AppEnv:
    Type: String
    Default: "testing"
    Description: Type of environment that service running on.
  AppKey:
    Type: String
    Default: "base64:B+SfHGdTdca+dxR4pzJ2SRrqFpF1gFS/pgZTHNxDbhw="
    Description: Application authorization secrets.
  AppName:
    Type: String
    Default: "PLIZI: Социальная сеть"
    Description: Application displayable name.
  AwsAccessKeyId:
    Type: String
    Default: "AKIAJBAKDWTT6A4ZFXYQ"
    Description: AWS access key id.
  AwsSecretAccessKey:
    Type: String
    Default: "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"
    Description: AWS access secret.
  AwsDefaultRegion:
    Type: String
    Default: "eu-central-1"
    Description: AWS region service hosted on.
  AwsBucket:
    Type: String
    Default: "plizibuck"
    Description: S2 bucket for assets storing.
  JwtBlacklistEnabled:
    Type: Number
    Default: 1
    Description: JWT blacklist.
  JwtTtl:
    Type: Number
    Default: 4320
    Description: JWT TTL.
  JwtSecret:
    Type: String
    Default: "8WM7E3BeKd7uMjpt7Wpi7y4BTp0nAFzx14Pob5DPBLSbpyz8Io1dzqsKZqBx1QTr"
    Description: ""
  LadaCacheActive:
    Type: Number
    Default: 0
    Description: Caching dublicated queries.
  MailEncryption:
    Type: String
    Default: "tls"
    Description: Mail encryption.
  MailFromAddress:
    Type: String
    Default: "no-reply@plizi.info"
    Description: Send emails from address.
  MailFromName:
    Type: String
    Default: "PLIZI Социальная сеть"
    Description: Send emails from name.
  MailHost:
    Type: String
    Default: "mail.plizi.info"
    Description: Mailer host.
  MailMailer:
    Type: String
    Default: "smtp"
    Description: Mailer type.
  MailPassword:
    Type: String
    Default: "fereamea78"
    Description: Mail password.
  MailPort:
    Type: Number
    Default: 587
    Description: Mailer port.
  MailUsername:
    Type: String
    Default: "no-reply@plizi.info"
    Description: Mail username.
  Neo4DbBoltPort:
    Type: Number
    Default: 7687
    Description: Neo4j Graph database bolt port.
  Neo4DbHost:
    Type: String
    Default: "neo4j.plizi.info"
    Description: Neo4j Graph database host.
  Neo4DbHttpPort:
    Type: Number
    Default: 7474
    Description: Neo4j Graph database http port.
  Neo4DbPassword:
    Type: String
    Default: "zKisCPceY6WzTP1R"
    Description: Neo4j Graph database password.
  Neo4DbUsername:
    Type: String
    Default: "neo4j"
    Description: Neo4j Graph database username.
  QueueConnection:
    Type: String
    Default: "redis"
    Description: Queue connection type [sync, redis, rebbitmq].
  #SentryLaravelDsn:
  #  Type: String
  #  Default: "http://89feb2eb67c741c29d06f1204b809e87@sentry.plizi.info/2"
  #  Description: Sentry exception logger host.
  SwooleHttpHost:
    Type: String
    Default: "0.0.0.0"
    Description: Swoole http host.
  #Role:
  #  Type: String
  #  Default: ""
  #  Description: (Optional) An IAM role to give the service's containers if the code within needs to
  #              access other AWS resources like S3 buckets, DynamoDB tables, etc
#Conditions:
#  HasCustomRole: !Not [ !Equals [!Ref 'Role', ''] ]
Resources:
  # A log group for storing the container logs for this service
  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Join ['-', [!Ref 'EnvironmentName', 'public', !Ref 'ServiceName']]

  # The task definition. This is a simple metadata description of what
  # container to run, and what resource requirements it has.
  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Ref 'ServiceName'
      Cpu: !Ref 'ContainerCpu'
      Memory: !Ref 'ContainerMemory'
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      ExecutionRoleArn:
        Fn::ImportValue:
          !Join [':', [!Ref 'EnvironmentName', 'ECSTaskExecutionRole']]
      TaskRoleArn:
        Fn::ImportValue:
          !Join [':', [!Ref 'EnvironmentName', 'ECSServiceExecutionTaskRole']]
      ContainerDefinitions:
        - Name: !Join [ "-", [ !Ref 'ServiceName', "web-socket" ] ]
          Image: !Ref 'ImageUrlWebSocket'
          PortMappings:
            - ContainerPort: !Ref 'ContainerPort'
            - ContainerPort: 5555
          Environment:
            - Name: API_URL
              Value: !Ref 'ApiUrl'
            - Name: APP_DEBUG
              Value: !Ref 'AppDebug'
            - Name: APP_ENV
              Value: !Ref 'AppEnv'
            - Name: APP_KEY
              Value: !Ref 'AppKey'
            - Name: APP_NAME
              Value: !Ref 'AppName'
            - Name: AWS_ACCESS_KEY_ID
              Value: !Ref 'AwsAccessKeyId'
            - Name: AWS_SECRET_ACCESS_KEY
              Value: !Ref 'AwsSecretAccessKey'
            - Name: AWS_DEFAULT_REGION
              Value: !Ref 'AwsDefaultRegion'
            - Name: AWS_BUCKET
              Value: !Ref 'AwsBucket'
            - Name: JWT_BLACKLIST_ENABLED
              Value: !Ref 'JwtBlacklistEnabled'
            - Name: JWT_TTL
              Value: !Ref 'JwtTtl'
            - Name: JWT_SECRET
              Value: !Ref 'JwtSecret'
            - Name: LADA_CACHE_ACTIVE
              Value: !Ref 'LadaCacheActive'
            - Name: MAIL_ENCRYPTION
              Value: !Ref 'MailEncryption'
            - Name: MAIL_FROM_ADDRESS
              Value: !Ref 'MailFromAddress'
            - Name: MAIL_FROM_NAME
              Value: !Ref 'MailFromName'
            - Name: MAIL_HOST
              Value: !Ref 'MailHost'
            - Name: MAIL_MAILER
              Value: !Ref 'MailMailer'
            - Name: MAIL_PASSWORD
              Value: !Ref 'MailPassword'
            - Name: MAIL_PORT
              Value: !Ref 'MailPort'
            - Name: MAIL_USERNAME
              Value: !Ref 'MailUsername'
            - Name: NEO4_DB_BOLT_PORT
              Value: !Ref 'Neo4DbBoltPort'
            - Name: NEO4_DB_HOST
              Value: !Ref 'Neo4DbHost'
            - Name: NEO4_DB_HTTP_PORT
              Value: !Ref 'Neo4DbHttpPort'
            - Name: NEO4_DB_PASSWORD
              Value: !Ref 'Neo4DbPassword'
            - Name: NEO4_DB_USERNAME
              Value: !Ref 'Neo4DbUsername'
            - Name: QUEUE_CONNECTION
              Value: !Ref 'QueueConnection'
            #- Name: SENTRY_LARAVEL_DSN
            #  Value: !Ref 'SentryLaravelDsn'
            - Name: SWOOLE_HTTP_HOST
              Value: !Ref 'SwooleHttpHost'
            - Name: ZMQ_SUB_HOST
              Value: '127.0.0.1'
            - Name: ENV_NAME
              Value: !Ref 'EnvironmentName'
            - Name: REGION
              Value: !Ref 'AWS::Region'
            - Name: DB_DATABASE
              Value:
                Fn::ImportValue:
                  !Join [':', [!Ref 'EnvironmentName', 'MySQLDBName']]
            - Name: DB_HOST
              Value:
                Fn::ImportValue:
                  !Join [':', [!Ref 'EnvironmentName', 'MySQLDBHost']]
            - Name: DB_PASSWORD
              Value:
                Fn::ImportValue:
                  !Join [':', [!Ref 'EnvironmentName', 'MySQLDBPass']]
            - Name: DB_PORT
              Value:
                Fn::ImportValue:
                  !Join [':', [!Ref 'EnvironmentName', 'MySQLDBPort']]
            - Name: DB_USERNAME
              Value:
                Fn::ImportValue:
                  !Join [':', [!Ref 'EnvironmentName', 'MySQLDBUser']]
            - Name: MONGO_DB_HOST
              Value:
                Fn::ImportValue:
                  !Join [':', [!Ref 'EnvironmentName', 'MongoDBHost']]
            - Name: MONGO_DB_PASSWORD
              Value:
                Fn::ImportValue:
                  !Join [':', [!Ref 'EnvironmentName', 'MongoDBPass']]
            - Name: MONGO_DB_USERNAME
              Value:
                Fn::ImportValue:
                  !Join [':', [!Ref 'EnvironmentName', 'MongoDBUser']]
            - Name: REDIS_HOST
              Value:
                Fn::ImportValue:
                  !Join [':', [!Ref 'EnvironmentName', 'RedisHost']]
            - Name: REDIS_PORT
              Value:
                Fn::ImportValue:
                  !Join [':', [!Ref 'EnvironmentName', 'RedisPort']]
          LogConfiguration:
            LogDriver: 'awslogs'
            Options:
              awslogs-group: !Join ['-', [!Ref 'EnvironmentName', 'public', !Ref 'ServiceName']]
              awslogs-region: !Ref 'AWS::Region'
              awslogs-stream-prefix: !Join [ "-", [ !Ref 'ServiceName', "web-socket" ] ]
        - Name: !Join [ "-", [ !Ref 'ServiceName', "queue-worker" ] ]
          Image: !Ref 'ImageUrlQueueWorker'
          Environment:
            - Name: API_URL
              Value: !Ref 'ApiUrl'
            - Name: APP_DEBUG
              Value: !Ref 'AppDebug'
            - Name: APP_ENV
              Value: !Ref 'AppEnv'
            - Name: APP_KEY
              Value: !Ref 'AppKey'
            - Name: APP_NAME
              Value: !Ref 'AppName'
            - Name: AWS_ACCESS_KEY_ID
              Value: !Ref 'AwsAccessKeyId'
            - Name: AWS_SECRET_ACCESS_KEY
              Value: !Ref 'AwsSecretAccessKey'
            - Name: AWS_DEFAULT_REGION
              Value: !Ref 'AwsDefaultRegion'
            - Name: AWS_BUCKET
              Value: !Ref 'AwsBucket'
            - Name: JWT_BLACKLIST_ENABLED
              Value: !Ref 'JwtBlacklistEnabled'
            - Name: JWT_TTL
              Value: !Ref 'JwtTtl'
            - Name: JWT_SECRET
              Value: !Ref 'JwtSecret'
            - Name: LADA_CACHE_ACTIVE
              Value: !Ref 'LadaCacheActive'
            - Name: MAIL_ENCRYPTION
              Value: !Ref 'MailEncryption'
            - Name: MAIL_FROM_ADDRESS
              Value: !Ref 'MailFromAddress'
            - Name: MAIL_FROM_NAME
              Value: !Ref 'MailFromName'
            - Name: MAIL_HOST
              Value: !Ref 'MailHost'
            - Name: MAIL_MAILER
              Value: !Ref 'MailMailer'
            - Name: MAIL_PASSWORD
              Value: !Ref 'MailPassword'
            - Name: MAIL_PORT
              Value: !Ref 'MailPort'
            - Name: MAIL_USERNAME
              Value: !Ref 'MailUsername'
            - Name: NEO4_DB_BOLT_PORT
              Value: !Ref 'Neo4DbBoltPort'
            - Name: NEO4_DB_HOST
              Value: !Ref 'Neo4DbHost'
            - Name: NEO4_DB_HTTP_PORT
              Value: !Ref 'Neo4DbHttpPort'
            - Name: NEO4_DB_PASSWORD
              Value: !Ref 'Neo4DbPassword'
            - Name: NEO4_DB_USERNAME
              Value: !Ref 'Neo4DbUsername'
            - Name: QUEUE_CONNECTION
              Value: !Ref 'QueueConnection'
            #- Name: SENTRY_LARAVEL_DSN
            #  Value: !Ref 'SentryLaravelDsn'
            - Name: SWOOLE_HTTP_HOST
              Value: !Ref 'SwooleHttpHost'
            - Name: ZMQ_SUB_HOST
              Value: '127.0.0.1'
            - Name: ENV_NAME
              Value: !Ref 'EnvironmentName'
            - Name: REGION
              Value: !Ref 'AWS::Region'
            - Name: DB_DATABASE
              Value:
                Fn::ImportValue:
                  !Join [':', [!Ref 'EnvironmentName', 'MySQLDBName']]
            - Name: DB_HOST
              Value:
                Fn::ImportValue:
                  !Join [':', [!Ref 'EnvironmentName', 'MySQLDBHost']]
            - Name: DB_PASSWORD
              Value:
                Fn::ImportValue:
                  !Join [':', [!Ref 'EnvironmentName', 'MySQLDBPass']]
            - Name: DB_PORT
              Value:
                Fn::ImportValue:
                  !Join [':', [!Ref 'EnvironmentName', 'MySQLDBPort']]
            - Name: DB_USERNAME
              Value:
                Fn::ImportValue:
                  !Join [':', [!Ref 'EnvironmentName', 'MySQLDBUser']]
            - Name: MONGO_DB_HOST
              Value:
                Fn::ImportValue:
                  !Join [':', [!Ref 'EnvironmentName', 'MongoDBHost']]
            - Name: MONGO_DB_PASSWORD
              Value:
                Fn::ImportValue:
                  !Join [':', [!Ref 'EnvironmentName', 'MongoDBPass']]
            - Name: MONGO_DB_USERNAME
              Value:
                Fn::ImportValue:
                  !Join [':', [!Ref 'EnvironmentName', 'MongoDBUser']]
            - Name: REDIS_HOST
              Value:
                Fn::ImportValue:
                  !Join [':', [!Ref 'EnvironmentName', 'RedisHost']]
            - Name: REDIS_PORT
              Value:
                Fn::ImportValue:
                  !Join [':', [!Ref 'EnvironmentName', 'RedisPort']]
          LogConfiguration:
            LogDriver: 'awslogs'
            Options:
              awslogs-group: !Join ['-', [!Ref 'EnvironmentName', 'public', !Ref 'ServiceName']]
              awslogs-region: !Ref 'AWS::Region'
              awslogs-stream-prefix: !Join [ "-", [ !Ref 'ServiceName', "queue-worker" ] ]
  
  # The service. The service is a resource which allows you to run multiple
  # copies of a type of task, and gather up their logs and metrics, as well
  # as monitor the number of running tasks and replace any that have crashed
  Service:
    DependsOn:
      - HTTPRule
      - HTTPSRule
    Type: AWS::ECS::Service
    Properties:
      ServiceName: !Ref 'ServiceName'
      Cluster:
        Fn::ImportValue:
          !Join [':', [!Ref 'EnvironmentName', 'ClusterName']]
      LaunchType: FARGATE       # TODO: Remove this for EC2 instead of Fargate
      PlatformVersion: "1.4.0"  # TODO: Remove this for EC2 instead of Fargate
      DeploymentConfiguration:
        MaximumPercent: !Ref DeploymentMaximum
        MinimumHealthyPercent: !Ref DeploymentMinimum
      DesiredCount: !Ref 'DesiredCount'
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups:
            - Fn::ImportValue:
                !Join [':', [!Ref 'EnvironmentName', 'FargateContainerSecurityGroup']]
          Subnets:
            - Fn::ImportValue:
                !Join [':', [!Ref 'EnvironmentName', 'PublicSubnetOne']]
            - Fn::ImportValue:
                !Join [':', [!Ref 'EnvironmentName', 'PublicSubnetTwo']]
      TaskDefinition: !Ref 'TaskDefinition'
      HealthCheckGracePeriodSeconds: 2147483647
      LoadBalancers:
        - ContainerName: !Join [ "-", [ !Ref 'ServiceName', "web-socket" ] ]
          ContainerPort: !Ref 'ContainerPort'
          TargetGroupArn: !Ref 'TargetGroup'
        # - ContainerName: !Ref 'ServiceName'
        #   ContainerPort: 7070
        #   TargetGroupArn: 
        #     Fn::ImportValue: 
        #       !Join [':', [!Ref 'EnvironmentName', 'NLBTargetGroupWSInbound']]
        # - ContainerName: !Ref 'ServiceName'
        #   ContainerPort: 5555
        #   TargetGroupArn: 
        #     Fn::ImportValue: 
        #       !Join [':', [!Ref 'EnvironmentName', 'NLBTargetGroupWSOutbound']]

  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 6
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      Matcher:
        HttpCode: "426"
      TargetType: ip
      Name: !Ref 'ServiceName'
      Port: !Ref 'ContainerPort'
      Protocol: !Ref 'ServiceProtocol'
      TargetGroupAttributes:
        - Key: stickiness.enabled
          Value: 'true'
        - Key: stickiness.type
          Value: 'lb_cookie'
        - Key: stickiness.lb_cookie.duration_seconds
          Value: '86400'
        - Key: deregistration_delay.timeout_seconds
          Value: '30'
      UnhealthyThresholdCount: 2
      VpcId:
        Fn::ImportValue:
          !Join [':', [!Ref 'EnvironmentName', 'VPCId']]
  HTTPRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - TargetGroupArn: !Ref 'TargetGroup'
          Type: 'forward'
      Conditions:
        - Field: host-header
          Values: [!Ref 'Path']
      ListenerArn:
        Fn::ImportValue:
          !Join [':', [!Ref 'EnvironmentName', 'ALBListenerWS']]
      Priority: !Ref 'Priority'
  HTTPSRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - TargetGroupArn: !Ref 'TargetGroup'
          Type: 'forward'
      Conditions:
        - Field: host-header
          Values: [!Ref 'Path']
      ListenerArn:
        Fn::ImportValue:
          !Join [':', [!Ref 'EnvironmentName', 'ALBListenerWSSSL']]
      Priority: !Ref 'Priority'
  # Enable autoscaling for this service
  ScalableTarget:
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    DependsOn: Service
    Properties:
      ServiceNamespace: 'ecs'
      ScalableDimension: 'ecs:service:DesiredCount'
      ResourceId:
        Fn::Join:
          - '/'
          - - service
            - Fn::ImportValue: !Join [':', [!Ref 'EnvironmentName', 'ClusterName']]
            - !Ref 'ServiceName'
      MinCapacity: !Ref MinCapacity
      MaxCapacity: !Ref MaxCapacity
      RoleARN:
        Fn::ImportValue:
          !Join [':', [!Ref 'EnvironmentName', 'AutoscalingRole']]

  # Create scaling policies for the service
  ScaleDownPolicy:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    DependsOn: ScalableTarget
    Properties:
      PolicyName:
        Fn::Join:
          - '/'
          - - scale
            - !Ref 'EnvironmentName'
            - !Ref 'ServiceName'
            - down
      PolicyType: StepScaling
      ResourceId:
        Fn::Join:
          - '/'
          - - service
            - Fn::ImportValue: !Join [':', [!Ref 'EnvironmentName', 'ClusterName']]
            - !Ref 'ServiceName'
      ScalableDimension: 'ecs:service:DesiredCount'
      ServiceNamespace: 'ecs'
      StepScalingPolicyConfiguration:
        AdjustmentType: 'ChangeInCapacity'
        StepAdjustments:
          - MetricIntervalUpperBound: 0
            ScalingAdjustment: -1
        MetricAggregationType: 'Average'
        Cooldown: !Ref ScaleDownCooldown

  ScaleUpPolicy:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    DependsOn: ScalableTarget
    Properties:
      PolicyName:
        Fn::Join:
          - '/'
          - - scale
            - !Ref 'EnvironmentName'
            - !Ref 'ServiceName'
            - up
      PolicyType: StepScaling
      ResourceId:
        Fn::Join:
          - '/'
          - - service
            - Fn::ImportValue: !Join [':', [!Ref 'EnvironmentName', 'ClusterName']]
            - !Ref 'ServiceName'
      ScalableDimension: 'ecs:service:DesiredCount'
      ServiceNamespace: 'ecs'
      StepScalingPolicyConfiguration:
        AdjustmentType: 'ChangeInCapacity'
        StepAdjustments:
          - MetricIntervalLowerBound: 0
            MetricIntervalUpperBound: 15
            ScalingAdjustment: 1
          - MetricIntervalLowerBound: 15
            MetricIntervalUpperBound: 25
            ScalingAdjustment: 2
          - MetricIntervalLowerBound: 25
            ScalingAdjustment: 3
        MetricAggregationType: 'Average'
        Cooldown: !Ref ScaleUpCooldown

  # Create alarms to trigger these policies
  LowCpuUsageAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName:
        Fn::Join:
          - '-'
          - - low-cpu
            - !Ref 'EnvironmentName'
            - !Ref 'ServiceName'
      AlarmDescription:
        Fn::Join:
          - ' '
          - - "Low CPU utilization for service"
            - !Ref 'ServiceName'
            - "in stack"
            - !Ref 'EnvironmentName'
      MetricName: CPUUtilization
      Namespace: AWS/ECS
      Dimensions:
        - Name: ServiceName
          Value: !Ref 'ServiceName'
        - Name: ClusterName
          Value:
            Fn::ImportValue: !Join [':', [!Ref 'EnvironmentName', 'ClusterName']]
      Statistic: Average
      Period: !Ref LowCpuPeriodAlarm
      EvaluationPeriods: 1
      Threshold: !Ref LowCpuThresholdAlarm
      ComparisonOperator: LessThanOrEqualToThreshold
      AlarmActions:
        - !Ref ScaleDownPolicy

  HighCpuUsageAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName:
        Fn::Join:
          - '-'
          - - high-cpu
            - !Ref 'EnvironmentName'
            - !Ref 'ServiceName'
      AlarmDescription:
        Fn::Join:
          - ' '
          - - "High CPU utilization for service"
            - !Ref 'ServiceName'
            - "in stack"
            - !Ref 'EnvironmentName'
      MetricName: CPUUtilization
      Namespace: AWS/ECS
      Dimensions:
        - Name: ServiceName
          Value: !Ref 'ServiceName'
        - Name: ClusterName
          Value:
            Fn::ImportValue: !Join [':', [!Ref 'EnvironmentName', 'ClusterName']]
      Statistic: Average
      Period: !Ref HighCpuPeriodAlarm
      EvaluationPeriods: 1
      Threshold: !Ref HighCpuThresholdAlarm
      ComparisonOperator: GreaterThanOrEqualToThreshold
      AlarmActions:
        - !Ref ScaleUpPolicy
