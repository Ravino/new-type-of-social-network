AWSTemplateFormatVersion: '2010-09-09'
Description: This stack deploys Network Load balancer with all required 
             target groups and listeners related to the current priject.
Metadata:
  cfn-lint:
    config:
      ignore_checks:
      - E3012
Parameters:
  # Network configuration
  EnvironmentName:
    Type: String
    Default: test
    Description: A name for the environment that this cloudformation will be part of.
                 Used to locate other resources in the same environment.
    AllowedValues:
      - test
      - prod
    ConstraintDescription: Environment name may be only 'test' or 'prod', to prevent
                           configuration files multiplication.
  CertificateArn:
    Type: String
    Description: ARN of the Amazon Certificate Manager SSL certificate to use for this app

  DomainName:
    Type: String
    Description: The specific alias name for the application
Resources:

  DummyTargetGroupNLB:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Join ['-', [!Ref 'EnvironmentName', 'nlb-tg-drop']]
      Port: 80
      Protocol: TCP
      VpcId: 
        Fn::ImportValue:
          !Join [':', [!Ref 'EnvironmentName', 'VPCId']]

  # Security
  # EcsSecurityGroupIngressFromNLB:
  #   Type: AWS::EC2::SecurityGroupIngress
  #   Properties:
  #     Description: Ingress from the public NLB
  #     GroupId: 
  #       Fn::ImportValue:
  #         !Join [':', [!Ref 'EnvironmentName', 'FargateContainerSecurityGroup']]
  #     IpProtocol: -1
  #     SourceSecurityGroupId: !Ref 'NetworkLoadBalancerSG'
      
  # NetworkLoadBalancerSG:
  #   Type: AWS::EC2::SecurityGroup
  #   Properties:
  #     GroupDescription: Access to the private facing network load balancer
  #     VpcId: 
  #       Fn::ImportValue:
  #         !Join [':', [!Ref 'EnvironmentName', 'VPCId']]
  #     SecurityGroupIngress:
  #       - CidrIp: 0.0.0.0/0
  #         IpProtocol: -1

  # Endpoints
  # PrivateSubnetOneEIP:
  #   Type: AWS::EC2::EIP
  #   Properties:
  #     Domain: "vpc"
  # AssociatePrivateSubnetOneEIP:
  #   Type: AWS::EC2::EIPAssociation
  #   Properties:
  #     EIP: !Ref PrivateSubnetOneEIP

  # PrivateSubnetTwoEIP:
  #   Type: AWS::EC2::EIP
  #   Properties:
  #     Domain: "vpc"
  # AssociatePrivateSubnetTwoEIP:
  #   Type: AWS::EC2::EIPAssociation
  #   Properties:
  #     EIP: !Ref PrivateSubnetTwoEIP

  # PrivateSubnetThreeEIP:
  #   Type: AWS::EC2::EIP
  #   Properties:
  #     Domain: "vpc"
  # AssociatePrivateSubnetThreeEIP:
  #   Type: AWS::EC2::EIPAssociation
  #   Properties:
  #     EIP: !Ref PrivateSubnetThreeEIP

  # S3 Bucket log
  # NLBLogBucket:
  #   Type: AWS::S3::Bucket
  #   Properties:
  #     BucketName: "plizi-eu-central-1-logs-test-nlb"
  #   DeletionPolicy: Retain
  #   UpdateReplacePolicy: Retain

  # # S3 Bucket policy
  # NLBLogBucketPolicy:
  #   Type: AWS::S3::BucketPolicy
  #   Properties:
  #     Bucket: !Ref 'NLBLogBucket'
  #     PolicyDocument:
  #       Version: "2008-10-17"
  #       Statement:
  #         - Sid: ELBAccessLogs20130930
  #           Effect: "Allow"
  #           Resource: 
  #             Fn::Join: 
  #               - ""
  #               - - "arn:aws:"
  #                 - "s3:::"
  #                 - !Ref NLBLogBucket
  #                 - "/"
  #                 - "Logs"
  #                 - "/AWSLogs/"
  #                 - !Sub ${AWS::AccountId}
  #                 - "/*"
  #           Principal: 
  #             AWS: 884088487044
  #           Action: 
  #           - "s3:PutObject"

  # Network Load Balancer
  NetworkLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    #DependsOn: "NLBLogBucketPolicy"
    Properties:
      Type: "network"
      Scheme: "internet-facing"
      LoadBalancerAttributes:
        # - Key: "access_logs.s3.enabled"
        #   Value: "true"
        # - Key: "access_logs.s3.bucket"
        #   Value: !Ref "NLBLogBucket"
        #- Key: "access_logs.s3.prefix"
        #  Value: "NLBLog"
        - Key: "load_balancing.cross_zone.enabled"
          Value: "true"
      SubnetMappings:
        - #AllocationId: !GetAtt "PrivateSubnetOneEIP.AllocationId"
          SubnetId: 
            Fn::ImportValue:
              !Join [':', [!Ref 'EnvironmentName', 'PublicSubnetOne']]
        - #AllocationId: !GetAtt "PrivateSubnetTwoEIP.AllocationId"
          SubnetId: 
            Fn::ImportValue:
              !Join [':', [!Ref 'EnvironmentName', 'PublicSubnetTwo']]
        - #AllocationId: !GetAtt "PrivateSubnetThreeEIP.AllocationId"
          SubnetId: 
            Fn::ImportValue:
              !Join [':', [!Ref 'EnvironmentName', 'PublicSubnetThree']]
      Tags:
        - Key: "Name"
          Value: "PLIZI-eu-central-1-network-TEST-NLB"
        - Key: "Project"
          Value: "Plizi"
        - Key: "Region"
          Value: !Sub ${AWS::Region}
        - Key: "Environment"
          Value: !Ref EnvironmentName

  NLBListenerTCP1215:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref DummyTargetGroupNLB
      LoadBalancerArn: !Ref 'NetworkLoadBalancer'
      Port: 1215
      Protocol: TCP

  NLBListenerTLS7070:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref DummyTargetGroupNLB
      LoadBalancerArn: !Ref 'NetworkLoadBalancer'
      Port: 7070
      Protocol: TLS
      Certificates:
        - CertificateArn: !Ref CertificateArn

Outputs:

  # Balancer Overall Info
  NLBId:
    Description: The ARN of the Network Load Balancer
    Value: !Ref 'NetworkLoadBalancer'
    Export:
      Name: !Join [ ':', [ !Ref 'EnvironmentName', 'NLBId' ] ]
  NLBCanonicalHostedZoneID: 
    Description: The ARN of the Network Load Balancer
    Value: !GetAtt NetworkLoadBalancer.CanonicalHostedZoneID
    Export:
      Name: !Join [ ':', [ !Ref 'EnvironmentName', 'NLBCanonicalHostedZoneID' ] ]
  NLBDNSName:
    Description: DNSName of Network Load Balancer
    Value: !GetAtt NetworkLoadBalancer.DNSName
    Export: 
      Name: !Join [ ':', [ !Ref 'EnvironmentName', 'NLBDNSName' ] ]
  NLBName:
    Description: Name of Network Load Balancer
    Value: !GetAtt NetworkLoadBalancer.LoadBalancerName
    Export: 
      Name: !Join [ ':', [ !Ref 'EnvironmentName', 'NLBName' ] ]
  NLBFullName:
    Description: Full Name of Network Load Balancer
    Value: !GetAtt NetworkLoadBalancer.LoadBalancerFullName
    Export: 
      Name: !Join [ ':', [ !Ref 'EnvironmentName', 'NLBFullName' ] ]

  # Extra stuff
  # PrivateSubnetOneEIP:
  #   Description: The ARN of the EIP that is linked to PrivateSubnetOneEIP
  #   Value: !Ref PrivateSubnetOneEIP
  #   Export:
  #     Name: !Join [ ':', [ !Ref 'EnvironmentName', 'PrivateSubnetOneEIP' ] ]
  # PrivateSubnetTwoEIP:
  #   Description: The ARN of the EIP that is linked to PrivateSubnetTwoEIP
  #   Value: !Ref PrivateSubnetTwoEIP
  #   Export:
  #     Name: !Join [ ':', [ !Ref 'EnvironmentName', 'PrivateSubnetTwoEIP' ] ]
  # PrivateSubnetThreeEIP:
  #   Description: The ARN of the EIP that is linked to PrivateSubnetThreeEIP
  #   Value: !Ref PrivateSubnetThreeEIP
  #   Export:
  #     Name: !Join [ ':', [ !Ref 'EnvironmentName', 'PrivateSubnetThreeEIP' ] ]
  # NLBLogBucket:
  #   Description: The ARN of the S3 Bucket that is created for NLB logs storage
  #   Value: !Ref NLBLogBucket
  #   Export:
  #     Name: !Join [ ':', [ !Ref 'EnvironmentName', 'NLBLogBucket' ] ]

  # Listeners
  NLBListenerTCP1215:
    Description: The ARN of the NLBListenerTCP1215
    Value: !Ref NLBListenerTCP1215
    Export:
      Name: !Join [ ':', [ !Ref 'EnvironmentName', 'NLBListenerTCP1215' ] ]

  NLBListenerTLS7070:
    Description: The ARN of the NLBListenerTLS7070
    Value: !Ref NLBListenerTLS7070
    Export:
      Name: !Join [ ':', [ !Ref 'EnvironmentName', 'NLBListenerTLS7070' ] ]