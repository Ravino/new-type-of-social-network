AWSTemplateFormatVersion: '2010-09-09'
Description: MongoDB cluster.
Parameters:
  EnvironmentName:
    Type: String
    Default: test
    Description: The environment name, used for locating outputs from the
                 prerequisite stacks
  MasterUsername:
    Type: String
    Default: 'plizi'
    Description: MongoDB admin user name.
  MasterUserPassword:
    Type: String
    Default: 'Tksx2PPDba8Ny0lZ'
    NoEcho: true
    Description: MongoDB admin user password.
  AccessPort:
    Type: String
    Default: "27010"
    Description: "Default port for Mongo DB cluster access."
  InstanceClass:
    Type: String
    Default: "db.t3.medium"
    Description: "Class of instance for hosting MongoDB cluster instance."
Resources:
  MongoSubnetGroup:
    Type: AWS::DocDB::DBSubnetGroup
    Properties:
      DBSubnetGroupName: !Sub "PLIZI-${AWS::Region}-mongo-${EnvironmentName}-DocDB-SG"
      DBSubnetGroupDescription: !Sub "Subnet group for MongoDB cluster on ${AWS::Region} region."
      SubnetIds: !Split [',', {'Fn::ImportValue': !Join [':', [!Ref 'EnvironmentName', 'PublicSubnets']] }]
  MongoSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub "PLIZI-${AWS::Region}-mongo-${EnvironmentName}-SG"
      GroupDescription: "Mongo Security Group"
      VpcId:
        Fn::ImportValue:
          !Join [':', [!Ref 'EnvironmentName', 'VPCId']]
  MongoIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Ingress from Fargate containers
      GroupId: !Ref 'MongoSecurityGroup'
      IpProtocol: tcp
      FromPort: !Ref 'AccessPort'
      ToPort: !Ref 'AccessPort'
      SourceSecurityGroupId:
        Fn::ImportValue:
          !Join [':', [!Ref 'EnvironmentName', 'FargateContainerSecurityGroup']]
  MongoDBClusterParameterGroup:
    Type: AWS::DocDB::DBClusterParameterGroup
    Properties:
      Description: MongoDB cluster parameters group
      Family: "docdb3.6"
      Parameters:
        audit_logs: "enabled" # prod: disabled
        tls: "disabled" # prod: enabled
        ttl_monitor: "disabled"
  MongoDBCluster:
    Type: 'AWS::DocDB::DBCluster'
    Properties:
      #Engine: "mongodb"
      #EngineVersion: "4.2.6" #TODO
      Port: !Ref 'AccessPort'
      DBSubnetGroupName: !Ref 'MongoSubnetGroup'
      DeletionProtection: false
      VpcSecurityGroupIds:
        - Fn::ImportValue:
            !Join [':', [!Ref 'EnvironmentName', 'FargateContainerSecurityGroup']]
      #AvailabilityZones:
      #  - eu-central-1a
      #  - eu-central-1b
      MasterUsername: !Ref 'MasterUsername'
      MasterUserPassword: !Ref 'MasterUserPassword'
      DBClusterParameterGroupName: !Ref 'MongoDBClusterParameterGroup'
      #EnableCloudwatchLogsExports:
      #  - error
      #  - general
      #  - slowquery
      #StorageEncrypted: true
      #KmsKeyId: string #
      #PreferredMaintenanceWindow: string
      #PreferredBackupWindow: string
      #SnapshotIdentifier: string
      #BackupRetentionPeriod: 7 # prod: required
      #Tags:
      #    -Value: string
      #     Key: string

  MongoInstance:
    Type: AWS::DocDB::DBInstance
    Properties:
      DBInstanceClass: !Ref 'InstanceClass'
      DBClusterIdentifier: !Ref 'MongoDBCluster' #required

Outputs:
  MongoDBName:
    Value: 'admin'
    Export:
      Name: !Join [ ':', [ !Ref 'EnvironmentName', 'MongoDBName' ] ]
  MongoDBHost:
    Value: !GetAtt 'MongoInstance.Endpoint' # TODO Possibly should be changed to MongoInstance.Endpoint
    Export:
      Name: !Join [ ':', [ !Ref 'EnvironmentName', 'MongoDBHost' ] ]
  MongoDBUser:
    Value: !Ref 'MasterUsername'
    Export:
      Name: !Join [ ':', [ !Ref 'EnvironmentName', 'MongoDBUser' ] ]
  MongoDBPass:
    Value: !Ref 'MasterUserPassword'
    Export:
      Name: !Join [ ':', [ !Ref 'EnvironmentName', 'MongoDBPass' ] ]
  MongoSecurityGroup:
    Value: !Ref 'MongoSecurityGroup'
    Export:
      Name: !Join [ ':', [ !Ref 'EnvironmentName', 'MongoSecurityGroup' ] ]
